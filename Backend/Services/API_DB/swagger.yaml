openapi: 3.0.0
info:
  version: "1.0.0"
  title: "My API"
  description: "API for managing devices, users, and related information."
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SVENWEIDENMANN/Web_projekt_vorprojekt_IPA/1.0.0
  - url: "http://127.0.0.1:3000/api"
paths:
  /devices:
    get:
      tags:
        - Devices
      summary: "Fetch all devices"
      operationId: "getDevices"
      responses:
        '200':
          description: "A list of devices"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    device_id:
                      type: integer
                    device_name_1:
                      type: string
                    device_name_2:
                      type: string
                    # Add other properties from the devices table
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Devices
      summary: "Add a new device"
      operationId: "addDevice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_name_1:
                  type: string
                device_name_2:
                  type: string
                # Add other properties from the devices table
      responses:
        '200':
          description: "Device added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Devices
      summary: "Update an existing device"
      operationId: "updateDevice"
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_name_1:
                  type: string
                device_name_2:
                  type: string
                # Add other properties from the devices table
      responses:
        '200':
          description: "Device updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Device not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Devices
      summary: "Delete a device"
      operationId: "deleteDevice"
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Device deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Device not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /phones:
    get:
      tags:
        - Phones
      summary: "Fetch all phones"
      operationId: "getPhones"
      responses:
        '200':
          description: "A list of phones"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    phone_id:
                      type: integer
                    mobile_number_1:
                      type: string
                    # Add other properties from the phones table
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Phones
      summary: "Add a new phone"
      operationId: "addPhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile_number_1:
                  type: string
                # Add other properties from the phones table
      responses:
        '200':
          description: "Phone added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Phones
      summary: "Update an existing phone"
      operationId: "updatePhone"
      parameters:
        - name: phone_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile_number_1:
                  type: string
                # Add other properties from the phones table
      responses:
        '200':
          description: "Phone updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Phone not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Phones
      summary: "Delete a phone"
      operationId: "deletePhone"
      parameters:
        - name: phone_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Phone deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Phone not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /apple_care:
    get:
      tags:
        - Apple Care
      summary: "Fetch all Apple Care records"
      operationId: "getAppleCare"
      responses:
        '200':
          description: "A list of Apple Care records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    apple_care_id:
                      type: integer
                    user_id:
                      type: integer
                    garantie:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Apple Care
      summary: "Add a new Apple Care record"
      operationId: "addAppleCare"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                garantie:
                  type: string
      responses:
        '200':
          description: "Apple Care record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Apple Care
      summary: "Update an existing Apple Care record"
      operationId: "updateAppleCare"
      parameters:
        - name: apple_care_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                garantie:
                  type: string
      responses:
        '200':
          description: "Apple Care record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Apple Care record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Apple Care
      summary: "Delete an Apple Care record"
      operationId: "deleteAppleCare"
      parameters:
        - name: apple_care_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Apple Care record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Apple Care record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /device_images:
    get:
      tags:
        - Device Images
      summary: "Fetch all device images"
      operationId: "getDeviceImages"
      responses:
        '200':
          description: "A list of device images"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    image_id:
                      type: integer
                    device_id:
                      type: integer
                    image_path:
                      type: string
                    device_name:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Device Images
      summary: "Add a new device image"
      operationId: "addDeviceImage"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                image_path:
                  type: string
                device_name:
                  type: string
      responses:
        '200':
          description: "Device image added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Device Images
      summary: "Update an existing device image"
      operationId: "updateDeviceImage"
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                image_path:
                  type: string
                device_name:
                  type: string
      responses:
        '200':
          description: "Device image updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Device image not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Device Images
      summary: "Delete a device image"
      operationId: "deleteDeviceImage"
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Device image deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Device image not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /home_office:
    get:
      tags:
        - Home Office
      summary: "Fetch all home office records"
      operationId: "getHomeOffice"
      responses:
        '200':
          description: "A list of home office records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    home_office_id:
                      type: integer
                    user_id:
                      type: integer
                    device_id:
                      type: integer
                    status:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Home Office
      summary: "Add a new home office record"
      operationId: "addHomeOffice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                device_id:
                  type: integer
                status:
                  type: string
      responses:
        '200':
          description: "Home office record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Home Office
      summary: "Update an existing home office record"
      operationId: "updateHomeOffice"
      parameters:
        - name: home_office_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                device_id:
                  type: integer
                status:
                  type: string
      responses:
        '200':
          description: "Home office record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Home office record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Home Office
      summary: "Delete a home office record"
      operationId: "deleteHomeOffice"
      parameters:
        - name: home_office_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Home office record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Home office record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /inventar_device:
    get:
      tags:
        - Inventar Device
      summary: "Fetch all inventory device records"
      operationId: "getInventarDevice"
      responses:
        '200':
          description: "A list of inventory device records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    inventar_device_id:
                      type: integer
                    device_id:
                      type: integer
                    zugewiesen_am:
                      type: string
                      format: date-time
                    zustand:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Inventar Device
      summary: "Add a new inventory device record"
      operationId: "addInventarDevice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                zugewiesen_am:
                  type: string
                  format: date-time
                zustand:
                  type: string
      responses:
        '200':
          description: "Inventory device record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Inventar Device
      summary: "Update an existing inventory device record"
      operationId: "updateInventarDevice"
      parameters:
        - name: inventar_device_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                zugewiesen_am:
                  type: string
                  format: date-time
                zustand:
                  type: string
      responses:
        '200':
          description: "Inventory device record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Inventory device record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Inventar Device
      summary: "Delete an inventory device record"
      operationId: "deleteInventarDevice"
      parameters:
        - name: inventar_device_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Inventory device record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Inventory device record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /inventar_liste_original:
    get:
      tags:
        - Inventar Liste Original
      summary: "Fetch all original inventory list records"
      operationId: "getInventarListeOriginal"
      responses:
        '200':
          description: "A list of original inventory list records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    inventar_liste_original_id:
                      type: integer
                    barcode:
                      type: string
                    qr_code:
                      type: string
                    name:
                      type: string
                    details:
                      type: string
                    transport_unit:
                      type: string
                    location:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Inventar Liste Original
      summary: "Add a new original inventory list record"
      operationId: "addInventarListeOriginal"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode:
                  type: string
                qr_code:
                  type: string
                name:
                  type: string
                details:
                  type: string
                transport_unit:
                  type: string
                location:
                  type: string
      responses:
        '200':
          description: "Original inventory list record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Inventar Liste Original
      summary: "Update an existing original inventory list record"
      operationId: "updateInventarListeOriginal"
      parameters:
        - name: inventar_liste_original_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode:
                  type: string
                qr_code:
                  type: string
                name:
                  type: string
                details:
                  type: string
                transport_unit:
                  type: string
                location:
                  type: string
      responses:
        '200':
          description: "Original inventory list record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Original inventory list record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Inventar Liste Original
      summary: "Delete an original inventory list record"
      operationId: "deleteInventarListeOriginal"
      parameters:
        - name: inventar_liste_original_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Original inventory list record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Original inventory list record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /machine_inventar:
    get:
      tags:
        - Machine Inventar
      summary: "Fetch all machine inventory records"
      operationId: "getMachineInventar"
      responses:
        '200':
          description: "A list of machine inventory records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    machine_inventar_id:
                      type: integer
                    machine_liste_id:
                      type: integer
                    inventar_liste_original_id:
                      type: integer
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Machine Inventar
      summary: "Add a new machine inventory record"
      operationId: "addMachineInventar"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                machine_liste_id:
                  type: integer
                inventar_liste_original_id:
                  type: integer
      responses:
        '200':
          description: "Machine inventory record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Machine Inventar
      summary: "Update an existing machine inventory record"
      operationId: "updateMachineInventar"
      parameters:
        - name: machine_inventar_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                machine_liste_id:
                  type: integer
                inventar_liste_original_id:
                  type: integer
      responses:
        '200':
          description: "Machine inventory record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Machine inventory record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Machine Inventar
      summary: "Delete a machine inventory record"
      operationId: "deleteMachineInventar"
      parameters:
        - name: machine_inventar_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Machine inventory record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Machine inventory record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /machine_list:
    get:
      tags:
        - Machine List
      summary: "Fetch all machine list records"
      operationId: "getMachineList"
      responses:
        '200':
          description: "A list of machine list records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    machine_liste_id:
                      type: integer
                    is_obsolete:
                      type: boolean
                    machine_name:
                      type: string
                    machine_function:
                      type: string
                    machine_description:
                      type: string
                    is_virtual:
                      type: boolean
                    vm_host:
                      type: string
                    cpu:
                      type: string
                    cores:
                      type: integer
                    ram_mb:
                      type: integer
                    os:
                      type: string
                    os_info:
                      type: string
                    machine_location:
                      type: string
                    lowest_unit:
                      type: string
                    buy_date:
                      type: string
                      format: date-time
                    value_of_hardware:
                      type: number
                    restore_hours:
                      type: number
                    serialnumber:
                      type: string
                    production_date:
                      type: string
                      format: date-time
                    disposal_date:
                      type: string
                      format: date-time
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Machine List
      summary: "Add a new machine list record"
      operationId: "addMachineList"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_obsolete:
                  type: boolean
                machine_name:
                  type: string
                machine_function:
                  type: string
                machine_description:
                  type: string
                is_virtual:
                  type: boolean
                vm_host:
                  type: string
                cpu:
                  type: string
                cores:
                  type: integer
                ram_mb:
                  type: integer
                os:
                  type: string
                os_info:
                  type: string
                machine_location:
                  type: string
                lowest_unit:
                  type: string
                buy_date:
                  type: string
                  format: date-time
                value_of_hardware:
                  type: number
                restore_hours:
                  type: number
                serialnumber:
                  type: string
                production_date:
                  type: string
                  format: date-time
                disposal_date:
                  type: string
      responses:
        '200':
          description: "Machine list record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Machine List
      summary: "Update an existing machine list record"
      operationId: "updateMachineList"
      parameters:
        - name: machine_liste_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_obsolete:
                  type: boolean
                machine_name:
                  type: string
                machine_function:
                  type: string
                machine_description:
                  type: string
                is_virtual:
                  type: boolean
                vm_host:
                  type: string
                cpu:
                  type: string
                cores:
                  type: integer
                ram_mb:
                  type: integer
                os:
                  type: string
                os_info:
                  type: string
                machine_location:
                  type: string
                lowest_unit:
                  type: string
                buy_date:
                  type: string
                  format: date-time
                value_of_hardware:
                  type: number
                restore_hours:
                  type: number
                serialnumber:
                  type: string
                production_date:
                  type: string
                  format: date-time
                disposal_date:
                  type: string
      responses:
        '200':
          description: "Machine list record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Machine list record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Machine List
      summary: "Delete a machine list record"
      operationId: "deleteMachineList"
      parameters:
        - name: machine_liste_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Machine list record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Machine list record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user_device:
    get:
      tags:
        - User Device
      summary: "Fetch all user device records"
      operationId: "getUserDevice"
      responses:
        '200':
          description: "A list of user device records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    device_id:
                      type: integer
                    zugeordnet_seit:
                      type: string
                      format: date-time
                    nutzungsstatus:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - User Device
      summary: "Add a new user device record"
      operationId: "addUserDevice"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                device_id:
                  type: integer
                zugeordnet_seit:
                  type: string
                  format: date-time
                nutzungsstatus:
                  type: string
      responses:
        '200':
          description: "User device record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - User Device
      summary: "Update an existing user device record"
      operationId: "updateUserDevice"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                zugeordnet_seit:
                  type: string
                  format: date-time
                nutzungsstatus:
                  type: string
      responses:
        '200':
          description: "User device record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "User device record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - User Device
      summary: "Delete a user device record"
      operationId: "deleteUserDevice"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "User device record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "User device record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user_phone:
    get:
      tags:
        - User Phone
      summary: "Fetch all user phone records"
      operationId: "getUserPhone"
      responses:
        '200':
          description: "A list of user phone records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    phone_id:
                      type: integer
                    nutzungsstatus:
                      type: string
                    besitzdauer:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - User Phone
      summary: "Add a new user phone record"
      operationId: "addUserPhone"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                phone_id:
                  type: integer
                nutzungsstatus:
                  type: string
                besitzdauer:
                  type: string
      responses:
        '200':
          description: "User phone record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - User Phone
      summary: "Update an existing user phone record"
      operationId: "updateUserPhone"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_id:
                  type: integer
                nutzungsstatus:
                  type: string
                besitzdauer:
                  type: string
      responses:
        '200':
          description: "User phone record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "User phone record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - User Phone
      summary: "Delete a user phone record"
      operationId: "deleteUserPhone"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "User phone record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "User phone record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users:
    get:
      tags:
        - Users
      summary: "Fetch all users"
      operationId: "getUsers"
      responses:
        '200':
          description: "A list of users"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    lastname:
                      type: string
                    firstname:
                      type: string
                    email_1:
                      type: string
                    email_2:
                      type: string
                    email_3:
                      type: string
                    qr_code:
                      type: string
                    barcode:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Users
      summary: "Add a new user"
      operationId: "addUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  type: string
                firstname:
                  type: string
                email_1:
                  type: string
                email_2:
                  type: string
                email_3:
                  type: string
                qr_code:
                  type: string
                barcode:
                  type: string
      responses:
        '200':
          description: "User added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Users
      summary: "Update an existing user"
      operationId: "updateUser"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  type: string
                firstname:
                  type: string
                email_1:
                  type: string
                email_2:
                  type: string
                email_3:
                  type: string
                qr_code:
                  type: string
                barcode:
                  type: string
      responses:
        '200':
          description: "User updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Users
      summary: "Delete a user"
      operationId: "deleteUser"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "User deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /workplace:
    get:
      tags:
        - Workplace
      summary: "Fetch all workplace records"
      operationId: "getWorkplace"
      responses:
        '200':
          description: "A list of workplace records"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    workplace_id:
                      type: integer
                    user_id:
                      type: integer
                    device_id:
                      type: integer
                    status:
                      type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      tags:
        - Workplace
      summary: "Add a new workplace record"
      operationId: "addWorkplace"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                device_id:
                  type: integer
                status:
                  type: string
      responses:
        '200':
          description: "Workplace record added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      tags:
        - Workplace
      summary: "Update an existing workplace record"
      operationId: "updateWorkplace"
      parameters:
        - name: workplace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                device_id:
                  type: integer
                status:
                  type: string
      responses:
        '200':
          description: "Workplace record updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: "Workplace record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - Workplace
      summary: "Delete a workplace record"
      operationId: "deleteWorkplace"
      parameters:
        - name: workplace_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Workplace record deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "Workplace record not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: "Database error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
